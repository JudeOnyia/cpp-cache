commit 15d69e013b139c25a40d5cee2889123a35cfb4e5
Author: JudeOnyia <60678029+JudeOnyia@users.noreply.github.com>
Date:   Sat Jul 11 20:59:10 2020 -0700

    First commit

commit 3cdc4960567c30c24aabd7395b5f375a76b3a43a
Author: Jude Onyia <judeonyia10@gmail.com>
Date:   Sun Jul 12 02:35:55 2020 -0700

    1) Wrote the base case and the recursive case
    2) Wrote the naive transpose function
    3) Tried using static variable to store original size of matrix

commit eeccb742236da012c83bb0bfe99353917ddf4ea4
Author: Jude Onyia <judeonyia10@gmail.com>
Date:   Sun Jul 12 15:43:58 2020 -0700

    1) Used static variables for original size of matrix
    2) Fix address overflow for case where matrix and result are different
    3) Made sure 2D matrix is all contiguous in memory

commit 508a80cea4b64e7db8dbd485de07b2d2a8f6f1fe
Author: Jude Onyia <judeonyia10@gmail.com>
Date:   Sun Jul 12 16:31:38 2020 -0700

    1) Fixed the condition for in-place transposition
    2) Wrote test for naive transposition
    3) Wrote test for in-place transposition

commit 1f30295b5ead7bd5e992dbe8969d3f3e5406c1e6
Author: Jude Onyia <judeonyia10@gmail.com>
Date:   Sun Jul 12 17:01:44 2020 -0700

    1) Removed static variables due case if function is used more than once
    2) Added a secondary function that takes a few more parameters needed

commit 7ef63e936daecec546f1df9ae86763b4bebf7882
Author: JudeOnyia <60678029+JudeOnyia@users.noreply.github.com>
Date:   Sun Jul 12 21:03:31 2020 -0700

    1) Wrote naive matrix multiply
    2) Wrote base case for matrix multiply
    3) Wrote the 3 cases, dividing M, or N, or P
    4) Used secondary recursive function approach
    5) Wrote test for both naive and efficient matrix multiplication

commit 2b169b0bf19517cd727ab9c72890f5a803e98bb0
Author: Jude Onyia <judeonyia10@gmail.com>
Date:   Sun Jul 12 23:45:47 2020 -0700

    1) Added lines to free memory in test cpp
    2) Performed some more testing

commit 2297423796b306dc9cf8d438be2699aaa64c41c7
Author: JudeOnyia <60678029+JudeOnyia@users.noreply.github.com>
Date:   Mon Jul 13 16:50:29 2020 -0700

    1) Wrote base case for fft function
    2) Wrote lines to factor n where n1 is close to sqrt(n)
    3) Transposed matrix x in-place using matrix_transpose class made earlier
    4) Replaced each row of x with n1 point dft of that row
    5) Calculated and multiplied by twiddle factor
    6) Transposed x in-place
    7) Replaced each row of x with n2 point dft of that row
    8) Transposed x in-place for correct order

commit 91ba65b14354bca2c5f068d0d4abcb4ce2018dcd
Author: Jude Onyia <judeonyia10@gmail.com>
Date:   Mon Jul 13 20:23:09 2020 -0700

    1) Changed global constants pi,e,and j to static
    2) changed format of input parameter to enable program to deduce
       base class K
    3) fixed typo in std::size_t spelling in main
    4) fixed error declaring N as std::size_t
    5) fixed error in using forward fft, namespace included
    6) included <limits>
